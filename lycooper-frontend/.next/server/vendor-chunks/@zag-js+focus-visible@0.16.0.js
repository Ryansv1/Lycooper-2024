"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@zag-js+focus-visible@0.16.0";
exports.ids = ["vendor-chunks/@zag-js+focus-visible@0.16.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@zag-js+focus-visible@0.16.0/node_modules/@zag-js/focus-visible/dist/index.mjs":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@zag-js+focus-visible@0.16.0/node_modules/@zag-js/focus-visible/dist/index.mjs ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getInteractionModality: () => (/* binding */ getInteractionModality),\n/* harmony export */   setInteractionModality: () => (/* binding */ setInteractionModality),\n/* harmony export */   trackFocusVisible: () => (/* binding */ trackFocusVisible),\n/* harmony export */   trackInteractionModality: () => (/* binding */ trackInteractionModality)\n/* harmony export */ });\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/.pnpm/@zag-js+dom-query@0.16.0/node_modules/@zag-js/dom-query/dist/index.mjs\");\n// src/index.ts\n\nvar hasSetup = false;\nvar modality = null;\nvar hasEventBeforeFocus = false;\nvar hasBlurredWindowRecently = false;\nvar handlers = /* @__PURE__ */ new Set();\nfunction trigger(modality2, event) {\n    handlers.forEach((handler)=>handler(modality2, event));\n}\nvar isMac =  false ? 0 : false;\nfunction isValidKey(e) {\n    return !(e.metaKey || !isMac && e.altKey || e.ctrlKey || e.key === \"Control\" || e.key === \"Shift\" || e.key === \"Meta\");\n}\nfunction onKeyboardEvent(event) {\n    hasEventBeforeFocus = true;\n    if (isValidKey(event)) {\n        modality = \"keyboard\";\n        trigger(\"keyboard\", event);\n    }\n}\nfunction onPointerEvent(event) {\n    modality = \"pointer\";\n    if (event.type === \"mousedown\" || event.type === \"pointerdown\") {\n        hasEventBeforeFocus = true;\n        const target = event.composedPath ? event.composedPath()[0] : event.target;\n        let matches = false;\n        try {\n            matches = target.matches(\":focus-visible\");\n        } catch  {}\n        if (matches) return;\n        trigger(\"pointer\", event);\n    }\n}\nfunction isVirtualClick(event) {\n    if (event.mozInputSource === 0 && event.isTrusted) return true;\n    return event.detail === 0 && !event.pointerType;\n}\nfunction onClickEvent(e) {\n    if (isVirtualClick(e)) {\n        hasEventBeforeFocus = true;\n        modality = \"virtual\";\n    }\n}\nfunction onWindowFocus(event) {\n    if (event.target === window || event.target === document) {\n        return;\n    }\n    if (!hasEventBeforeFocus && !hasBlurredWindowRecently) {\n        modality = \"virtual\";\n        trigger(\"virtual\", event);\n    }\n    hasEventBeforeFocus = false;\n    hasBlurredWindowRecently = false;\n}\nfunction onWindowBlur() {\n    hasEventBeforeFocus = false;\n    hasBlurredWindowRecently = true;\n}\nfunction isFocusVisible() {\n    return modality !== \"pointer\";\n}\nfunction setupGlobalFocusEvents() {\n    if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isDom)() || hasSetup) {\n        return;\n    }\n    const { focus } = HTMLElement.prototype;\n    HTMLElement.prototype.focus = function focusElement(...args) {\n        hasEventBeforeFocus = true;\n        focus.apply(this, args);\n    };\n    document.addEventListener(\"keydown\", onKeyboardEvent, true);\n    document.addEventListener(\"keyup\", onKeyboardEvent, true);\n    document.addEventListener(\"click\", onClickEvent, true);\n    window.addEventListener(\"focus\", onWindowFocus, true);\n    window.addEventListener(\"blur\", onWindowBlur, false);\n    if (typeof PointerEvent !== \"undefined\") {\n        document.addEventListener(\"pointerdown\", onPointerEvent, true);\n        document.addEventListener(\"pointermove\", onPointerEvent, true);\n        document.addEventListener(\"pointerup\", onPointerEvent, true);\n    } else {\n        document.addEventListener(\"mousedown\", onPointerEvent, true);\n        document.addEventListener(\"mousemove\", onPointerEvent, true);\n        document.addEventListener(\"mouseup\", onPointerEvent, true);\n    }\n    hasSetup = true;\n}\nfunction trackFocusVisible(fn) {\n    setupGlobalFocusEvents();\n    fn(isFocusVisible());\n    const handler = ()=>fn(isFocusVisible());\n    handlers.add(handler);\n    return ()=>{\n        handlers.delete(handler);\n    };\n}\nfunction trackInteractionModality(fn) {\n    setupGlobalFocusEvents();\n    fn(modality);\n    const handler = ()=>fn(modality);\n    handlers.add(handler);\n    return ()=>{\n        handlers.delete(handler);\n    };\n}\nfunction setInteractionModality(value) {\n    modality = value;\n    trigger(value, null);\n}\nfunction getInteractionModality() {\n    return modality;\n}\n //# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@zag-js+focus-visible@0.16.0/node_modules/@zag-js/focus-visible/dist/index.mjs\n");

/***/ })

};
;